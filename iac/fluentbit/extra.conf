########################################################3
# Service definition
########################################################3
[SERVICE]
    HTTP_Server  On
    HTTP_Listen  0.0.0.0
    HTTP_PORT    2020
    Parsers_File /fb_metrics_parser.conf
    storage.metrics On
    storage.path              /var/log/flb-storage/
    storage.sync              normal
    storage.checksum          off
    storage.backlog.mem_limit 5M

########################################################3
# Inputs
########################################################3
## Basic incoming
[INPUT]
    Name forward
    unix_path /var/run/fluent.sock
    Mem_Buf_Limit 50MB
    Tag app_logs
    storage.type filesystem

[INPUT]
    Name        forward
    Listen      0.0.0.0
    Port        24224
    Tag app_logs


# Configure FB to scrape its own prom metrics
[INPUT]
    Name exec
    Command curl -s http://127.0.0.1:2020/api/v1/metrics/prometheus
    Interval_Sec 30
    Tag fb_metrics
    Mem_Buf_Limit     20MB
    storage.type  filesystem

# Basic incoming metrics
[INPUT]
    Name exec
    Command curl -s http://127.0.0.1:2020/api/v1/storage && echo ""
    Interval_Sec 10
    Tag fb_metrics-storage
    Mem_Buf_Limit     100MB

[INPUT]
    Name   mem
    Tag    fb_memory

[INPUT]
    Name cpu
    Tag  fb_cpu

########################################################3
# Filters
########################################################3
[FILTER]
    Name grep
    Match fb_metrics
    Regex exec output

# Filter out the HELP and TYPE fields which aren't parseable by the cw metric filter
[FILTER]
    Name grep
    Match fb_metrics
    Exclude exec HELP

[FILTER]
    Name grep
    Match fb_metrics
    Exclude exec TYPE

# Parse the metrics to json for easy parsing in CW Log Group Metrics filter
[FILTER]
    Name parser
    Match fb_metrics
    Key_Name exec
    Parser fluentbit_prom_metrics_to_json
    Reserve_Data True

[FILTER]
    name                  multiline
    match                 *
    multiline.key_content log
    multiline.parser      go

# Parse the JSON metrics
[FILTER]
    Name parser
    Match fb_metrics-storage
    Key_Name exec
    Parser json

# Add hostname to metrics to identify them
[FILTER]
    Name record_modifier
    Match fb*
    Record hostname ${HOSTNAME}

# Send the metrics as CW Logs
# The CW Metrics filter on the log group will turn them into metrics
# Use hostname in logs to differentiate log streams per task in Fargate
# Alternative is to use: https://github.com/aws/amazon-cloudwatch-logs-for-fluent-bit#templating-log-group-and-stream-names
[OUTPUT]
    Name cloudwatch_logs
    Match   fb_metrics*
    region ${FLUENT_BIT_METRICS_LOG_REGION}
    log_group_name ${FLUENT_BIT_METRICS_LOG_GROUP}
    log_stream_name ${HOSTNAME}-fb-internal-metrics
    auto_create_group On
    retry_limit 2
    workers 1

[OUTPUT]
    Name   cloudwatch_logs
    Match  fb_memory*
    region ${FLUENT_BIT_METRICS_LOG_REGION}
    log_group_name ${FLUENT_BIT_METRICS_LOG_GROUP}
    log_stream_name ${HOSTNAME}-fb-memory
    auto_create_group On
    retry_limit 2
    workers 1

[OUTPUT]
    Name   cloudwatch_logs
    Match  fb_cpu*
    region ${FLUENT_BIT_METRICS_LOG_REGION}
    log_group_name ${FLUENT_BIT_METRICS_LOG_GROUP}
    log_stream_name ${HOSTNAME}-fb-cpu
    auto_create_group On
    retry_limit 2
    workers 1

## Per https://aws.amazon.com/blogs/containers/under-the-hood-firelens-for-amazon-ecs-tasks/
## The log outputs generated from the Task Definition match <container-name>-firelens*
[OUTPUT]
    Name         loki
    Match        andrewslai-firelens*
    host         logs-prod3.grafana.net
    port          443
    http_user     309152
    http_passwd   ${HTTP_PASSWORD}
    tls           on
    labels        job=firelens,hostname=${HOSTNAME}
    remove_keys   $container_id,$ecs_task_arn
    label_keys    $container_name,$source
    line_format   json
